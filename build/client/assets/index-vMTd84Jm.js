import{r as o,j as s}from"./components-UScJPEQZ.js";import{A as v,C as N}from"./ContentLayout-CH9JGj2M.js";import{h as C,c as S,u as E,g as T}from"./AuthContext-DP2umk9J.js";import{z as n,u as I,s as R}from"./index-DFVatVxl.js";import{f as A,i as L,I as x,B as U}from"./Input-BLmtOyFp.js";import"./MobileNav-aPg5T7ro.js";import"./index-DOwvlINV.js";import"./UserMenu-Bxj1AbP9.js";const P=new RegExp(/^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!()Â£@$%^&*-]).{8,}$/),V=n.object({oldpassword:n.string().min(1,{message:"Please enter old password."}).min(8,{message:"Password must be up to 8 characters."}).regex(P,{message:"Please enter a valid password"}),newpassword:n.string().min(1,{message:"Please enter new password."}).min(8,{message:"Password must be at least 8 characters."}).regex(P,{message:"Please enter a valid password"}),newpassword2:n.string().min(1,{message:"Please retype new password."}).min(8,{message:"Password must be at least 8 characters."}).regex(P,{message:"Please enter a valid password"})}).superRefine((e,r)=>{e.oldpassword===e.newpassword&&r.addIssue({code:n.ZodIssueCode.custom,path:["newpassword"],message:"New password cannot be the same as old password"}),e.newpassword!==e.newpassword2&&r.addIssue({code:n.ZodIssueCode.custom,path:["newpd2"],message:"Your new password don't match"})}),k=({loaderData:e,user:r})=>{var b;const[j,t]=o.useState(null),[p,c]=o.useState(!1),l=a=>{let f=a.target.value,h=a.target.name;t(m=>({...m,[h]:f}))},w=async a=>{var m;c(!0),await new Promise(i=>setTimeout(i,1e3));const f="/api/users/change_password/"+((m=e.userProfile)==null?void 0:m.user_guid),h=S.BASE_URL+f;a.password=a==null?void 0:a.newpassword,delete a.oldpassword,delete a.newpassword,delete a.newpassword2;try{const i=await fetch(h,{method:"PUT",headers:C,body:JSON.stringify(a)});if(i.ok)alert("Password Successfully Changed! Use new password on next login");else{let $=i.json().then(y=>{alert(y.error)})}}catch{return}finally{c(!1)}},{register:d,handleSubmit:u,getValues:B,setValue:F,watch:W,setError:Z,formState:{errors:g,isSubmitting:_}}=I({defaultValues:e.listing,resolver:R(V)});return s.jsx("form",{onSubmit:u(w),children:s.jsx("div",{className:`${A} mt-0  
            rounded-lg pt-4 max-w-[500px] w-full mx-auto`,children:s.jsxs("div",{className:L,children:[s.jsx("div",{className:" text-xl text-gray-700 font-semibold border-b pb-1",children:"Change Password"}),s.jsxs("div",{className:" pt-3 pb-4 text-[13px] leading-5",children:[s.jsx("b",{children:(b=e.userProfile)==null?void 0:b.email})," is your current email. It will be used be used for password resets or changes."]}),s.jsx("div",{className:"mt-[20px]"}),s.jsx(x,{controlTitle:"Current Password",controlPlaceholder:"Enter current password",controlType:"password",controlName:"oldpassword",register:d,changeHandler:l,error:g.oldpassword}),s.jsx(x,{controlTitle:"New Password",controlType:"password",controlPlaceholder:"Enter new password",controlName:"newpassword",register:d,changeHandler:l,error:g.newpassword}),s.jsx(x,{controlTitle:"Retype New Password",controlPlaceholder:"Retype new password",controlName:"newpassword2",controlType:"password",register:d,changeHandler:l,error:g.newpassword2}),s.jsx(U,{working:p})]})})})},K=()=>{const{user:e}=E(),[r,j]=o.useState(null),[t,p]=o.useState(null),[c,l]=o.useState(!0);return o.useEffect(()=>{async function w(d){const u=await T(d||"");j(u)}e!=null&&e.guid&&w(e==null?void 0:e.guid)},[e==null?void 0:e.guid]),o.useEffect(()=>{r&&p({userProfile:r})},[r]),o.useEffect(()=>{t&&l(!1)},[t]),c?s.jsx("div",{className:"flex justify-center items-center h-screen",children:s.jsx("div",{className:"text-lg",children:"Loading..."})}):s.jsx(v,{children:s.jsxs(N,{title:"Change Password",children:[r===null?"Loading...":"",s.jsx("div",{className:"font-semibold mb-2 text-md",children:r==null?void 0:r.email}),t&&s.jsx(k,{loaderData:t,user:e})]})})};export{K as default};
